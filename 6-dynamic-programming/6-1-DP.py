# 다이나믹 프그래밍은 메모리를 적절히 사용하여 수행 시간 효율성을 비약적으로 향상시키는 방법
# 이미 계산된 결과는 별도의 메모리 영역에 저장하여 다시 계산하지 않도록 한다.
# 구현은 일반적으로 두 가지 방식(탑다운과 보텀업)으로 구성된다.
# 동적 계획법이라고도 불린다.
# 일반적으로 동적은 자료구조에서 동적 할당은 '프로그램이 실행되는 도중에 실행에 필요한 메모리를 할당하는 기법'을 의미한다.
# 다이나믹 프로그래밍에서 '다이나믹'은 별다른 의미 없이 사용된 단어이다.

# 다이나믹 프로그래밍의 조건
# 최적 부분 구조(Optimal Substructure): 큰 문제를 작은 문제로 나눌 수 있으며 작은 문제의 답을 모아서 큰 문제를 해결할 수 있다.
# 중복되는 부분 문제(Overlapping Subproblem): 동일한 작은 문제를 반복적으로 해결해야 한다.

# 피보나치 수열
# 1,1,2,3,5,8,13,21,34,55,89
# 점화식이란 인접한 항들 사이의 관계식을 의미한다.
# an=an-1+an-2, a1=1, a2=1

def fibo(x):
    if x==1 or x==2:
        return 1
    return fibo(x-1)+fibo(x-2)

print(fibo(4))

# 단순 재귀 함수로 피보나치 수열을 해결하면 지수 시간 복잡도를 가지게 된다. (중복되는 부분 문제,f(2))
# -> 다이나믹 프로그래밍으로 해결!(조건을 만족하므로)
