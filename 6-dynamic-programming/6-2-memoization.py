# 메모이제이션 (Memoization)
# 한 번 계산한 결과를 메모리 공간에 메모하는 기법
# 같은 문제를 다시 호출하면 메모했던 결과를 그대로 가져온다.
# 값을 기록해 놓는다는 점에서 캐싱(Caching)이라고도 한다.

# 탑다운(메모이제이션)방식은 하향식이라고도 하며 보텀업 방식은 상향식이라고도 하ㅏㄴ다.
# 다이나믹 프로그래밍의 전형적인 형태는 보텀업 방식이다.
# 결과 저장용 리스트는 DP테이블이라고 부른다.
# 메모이제이션은 이전에 계산된 결과를 일시적으로 기록해 놓는 넓은 개념을 의미해 DP에 국한된 개념은 아니다.
# 메모이제이션을 이용하는 경우 피보나치 수열 함수의 시간 복잡도는 O(N)이다.

# 재귀함수로 구현(탑다운 다이나믹 프로그래밍)
d=[0]*100
 
def fibo(x):
    print(str(x),end=' ')
    if x==1 or x==2:
        return 1
    if d[x]!=0:
        return d[x]
    d[x]=fibo(x-1)+fibo(x-2)
    return d[x]

print(fibo(6))

# 반복문으로 구현(보텀업 다이나믹 프로그래밍)
d2=[0]*100

d2[1]=1
d2[2]=1
n=99

for i in range(3,n+1):
    d2[i]=d2[i-1]+d2[i-2]
    
print(d2[n])
    